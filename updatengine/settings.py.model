###################################################################################
# UpdatEngine - Software Packages Deployment and Administration tool              #  
#                                                                                 #
# Copyright (C) Yves Guimard - yves.guimard@gmail.com                             #
#                                                                                 #
# This program is free software; you can redistribute it and/or                   #
# modify it under the terms of the GNU General Public License                     #
# as published by the Free Software Foundation; either version 2                  #
# of the License, or (at your option) any later version.                          #
#                                                                                 #
# This program is distributed in the hope that it will be useful,                 #
# but WITHOUT ANY WARRANTY; without even the implied warranty of                  #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                   #
# GNU General Public License for more details.                                    #
#                                                                                 #
# You should have received a copy of the GNU General Public License               #
# along with this program; if not, write to the Free Software                     #
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. #
###################################################################################

from django.utils.translation import gettext_lazy as _
import os

# Project paths
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))


##############################################
### -- Set your UE server settings here -- ###
##############################################

# PROJECT_URL is the default server used by UpdatEngine-client to download packages
PROJECT_URL = 'http://##updatengine_server_ip##:1979'

# List of host/domain names that this Django site can serve
# Add your ip and/or domain else you will have a "Bad Request (400)" error
ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]', '##updatengine_server.domain.tld##']

# Interface language
LANGUAGES = (
    ('fr',_('french')),
    ('en',_('english'))
)

DEFAULT_LANGUAGE = 'fr'

# Database (see https://docs.djangoproject.com/en/1.11/ref/settings/#databases)
# MySql database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',     # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        'NAME' : '##database_name##',
        'USER': '##database_user_name##',         # Not used with sqlite3.
        'PASSWORD': '##database_user_password##', # Not used with sqlite3.
        # 'HOST': '',                             # Set to empty string for localhost. Not used with sqlite3.
        # 'PORT': '',                             # Set to empty string for default. Not used with sqlite3.
        # 'OPTIONS': {
        #     'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        # }
    }
}

# sqlite database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
#         'NAME' : os.path.join(PROJECT_DIR, 'db/updatengine.db'),
#     }
# }

# TEST settings
# Execution command:
# cd /var/www/UE-environment/updatengine-server
# /var/www/UE-environment/bin/python2.7 /var/www/UE-environment/updatengine-server/manage.py test --verbosity 2
import sys
TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'
if TESTING:
    DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'fr'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# UpdatEngine admin options
# Set SHOW_PERM_CONFIG_AUTH to true to be able to add permissions to users
# without including him to a group
SHOW_PERM_CONFIG_AUTH = False

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vb-9kix=4$g56(qt*ryg5u!md*pdm*ki@)45d$*%%%9bwl6-y6'

# EMAIL
ADMINS = (
     #('admin', 'admin@your_adress.tld'),
)
MANAGERS = ADMINS
DEFAULT_FROM_EMAIL = 'updatengine@your_adress.tld'
SERVER_EMAIL = 'updatengine_error@your_adress.tld'
# Optional SMTP authentication information:
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'server.your_adress.tld'
#EMAIL_PORT = 465
#EMAIL_HOST_USER = 'USERNAME@your_adress.tld'
#EMAIL_HOST_PASSWORD = 'PASSWORD'
#EMAIL_USE_TLS = False
#EMAIL_USE_SSL = True

##############################################
###      -- End UE server settings --      ###
##############################################



# Grappelli definition
GRAPPELLI_ADMIN_TITLE = 'UpdatEngine'

GRAPPELLI_INDEX_DASHBOARD = 'updatengine.dashboard.CustomIndexDashboard'

# Application definition
INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'grappelli.dashboard',
    'grappelli',
    'django.contrib.admin',
    'inventory',
    'deploy',
    'configuration',
    'adminactions',
    'django_extensions', # needed for runscript only
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'updatengine.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'updatengine.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

ugettext = lambda s: s
LOCALE_PATHS = (os.path.join(BASE_DIR, 'locale/'),)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_URL = '/static/'

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = os.path.join(PROJECT_DIR, 'media')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
MEDIA_URL = PROJECT_URL + '/media/'

# Absolute path to the directory static files should be collected to.
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

# URL prefix for static files.
# STATIC_URL = PROJECT_URL + '/static/'
# ADMIN_MEDIA_PREFIX = STATIC_URL + '/static/admin/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(PROJECT_DIR, 'files'),
    )

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Set uploaded files permissions to "-rw-r--r--"
FILE_UPLOAD_PERMISSIONS = 0644

# Disable default limit of 1000 fields per request.
# Necessary for bulk modification of objects - e.g., when saving on a linux machine
DATA_UPLOAD_MAX_NUMBER_FIELDS = None
